# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Link Curation API
  description: We support three basic APIs. Questions, Answers and Account Services
  version: "1.0.0"
# the domain of the service
host: api.uber.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /question:
    get:
      summary: Serve relevant questions from database 
      description: |
        This Question endpoint returns set of questions to client based on different paraneters associated 
        with the user and user's previous history.
      parameters:
        - name: stats
          in: query
          description: Flag that appends question stastics in the response.
          required: false
          type: boolean
        - name: bulk
          in: query
          description: Limit number of questions returned. Default is 1.
          required: False
          type: integer
          format: int32
      tags:
        - question
      responses:
        200:
          description: An array of questions
          schema:
            type: array
            items:
              $ref: '#/definitions/Questions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user:
    post:
      summary: Register new user
      description: |
        Create new user account for a curator.  
      parameters:
        - name: username
          in: query
          description: Username of a user. 
          required: true
          type: string
        - name: password
          in: query
          description: Password of a user
          required: true
          type: string
      tags:
        - Account
      responses:
        200:
          description: Profile information for a user
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    properties:
      Location:
        type: string
        description: Unique url endpoint for a user 
      Username:
        type: string
        description: Username that was registered
  Questions:
    properties:
      Exact_Match:
        type: array
        items:
          $ref: '#/definitions/Exactmatched'
      Unmatched:
        type: array
        items:
          $ref: '#/definitions/Unmatched'
      qid:
        type: string
        description: Unique question ID
      stats:
        type: string
        description: Returns question statitics if requested in query
  Exactmatched:
    properties:
      name:
        type: string
        description: Name of the property that matched exactly
      value:
        type: string
        description: Value of the property that matched exactly on both side.
  Unmatched:
    properties:
      name:
        type: string
        description: Name of the property.
      lvalue:
        type: string
        description: Value of the property on left side.
      rvalue:
        type: string
        description: Value of the property on right side.
  Error:
    type: object
    properties:
      message:
        type: string